const express = require("express");
const router = express.Router();
const User = require("../models/userModel");

//GET
router.get("/", async (req, res) => {
  try {
    const users = await User.find();
    res.json(users);
  } catch (err) {
    console.error(err.message);
    res.status(500).json({ message: "Server error" });
  }
});

router.get("/:id", async (req, res) => {
  try {
    const user = await User.findById(req.params.id);

    if (!user) {
      return res.status(404).json({ message: "User not found" });
    }

    res.json(user);
  } catch (err) {
    console.error(err.message);
    res.status(500).json({ message: "Server error" });
  }
});
//POST
router.post("/", async (req, res) => {
    try {
      const { nickname, email, password } = req.body;
  
      // Check if all required fields are present
      if (!nickname || !email || !password) {
        return res
          .status(400)
          .json({ message: "Please provide all required fields" });
      }
  
      // Create and save the new user
      const newUser = new User({
        nickname,
        email,
        password,
      });
  
      const savedUser = await newUser.save();
      res.status(201).json(savedUser);
    } catch (err) {
      console.error(err.message);
      res.status(500).json({ message: "Server error" });
    }
  });

//PUT
router.put("/:id", async (req, res) => {
  try {
    const { nickname, email, password } = req.body;

    const user = await User.findById(req.params.id);

    if (!user) {
      return res.status(404).json({ message: "User not found" });
    }

    // Update the user's details
    user.nickname = nickname || user.nickname;
    user.email = email || user.email;
    user.password = password || user.password;

    const updatedUser = await user.save();
    res.json(updatedUser);
  } catch (err) {
    console.error(err.message);
    res.status(500).json({ message: "Server error" });
  }
});

//DELETE
router.delete("/:id", async (req, res) => {
  try {
    const user = await User.findByIdAndDelete(req.params.id);

    if (!user) {
      return res.status(404).json({ message: "User not found" });
    }

    res.json({ message: "User deleted successfully" });
  } catch (err) {
    res.status(500).json({ message: "Server error", error: err.message });
  }
});

module.exports = router;
